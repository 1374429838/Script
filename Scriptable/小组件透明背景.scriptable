{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "green",
    "glyph" : "magic"
  },
  "name" : "小组件透明背景",
  "script" : "\n\/\/ Variables used by Scriptable.\n\/\/ These must be at the very top of the file. Do not edit.\n\/\/ icon-color: deep-purple; icon-glyph: image;\n\n\/\/ This widget was created by Max Zeryck @mzeryck\n\n\/\/ Widgets are unique based on the name of the script.\nconst filename = Script.name() + \".jpg\";\nconst files = FileManager.local();\nconst path = files.joinPath(files.documentsDirectory(), filename);\n\nif (config.runsInWidget) {\n  let widget = new ListWidget();\n  widget.backgroundImage = files.readImage(path);\n\n  \/\/ You can your own code here to add additional items to the \"invisible\" background of the widget.\n\n  Script.setWidget(widget);\n  Script.complete();\n\n  \/*\n   * The code below this comment is used to set up the invisible widget.\n   * ===================================================================\n   *\/\n} else {\n  \/\/ Determine if user has taken the screenshot.\n  var message;\n  message =\n  \"以下是【透明背景】生成步骤，如果你没有屏幕截图请退出，并返回主屏幕长按进入编辑模式。滑动到最右边的空白页截图。然后重新运行！\";\n  let exitOptions = [\"继续(已有截图)\", \"退出(没有截图)\"];\n  let shouldExit = await generateAlert(message, exitOptions);\n  if (shouldExit) return;\n\n  \/\/ Get screenshot and determine phone size.\n  let img = await Photos.fromLibrary();\n  let height = img.size.height;\n  let phone = phoneSizes()[height];\n  if (!phone) {\n    message = \"您似乎选择了非iPhone屏幕截图的图像，或者不支持您的iPhone。请使用其他图像再试一次!\";\n    await generateAlert(message, [\"好的！我现在去截图\"]);\n    return;\n  }\n\n  \/\/ Prompt for widget size and position.\n  message = \"您想要创建什么尺寸的小部件？\";\n  let sizes = [\"小号\", \"中号\", \"大号\"];\n  let size = await generateAlert(message, sizes);\n  let widgetSize = sizes[size];\n\n  message = \"您想它在什么位置？\";\n  message += height == 1136 ? \" (请注意，您的设备仅支持两行小部件，因此中间和底部选项相同。)\" : \"\";\n\n  \/\/ Determine image crop based on phone size.\n  let crop = { w: \"\", h: \"\", x: \"\", y: \"\" };\n  if (widgetSize == \"小号\") {\n    crop.w = phone.小号;\n    crop.h = phone.小号;\n    let positions = [\"顶部 左边\", \"顶部 右边\", \"中间 左边\", \"中间 右边\", \"底部 左边\", \"底部 右边\"];\n    let position = await generateAlert(message, positions);\n\n    \/\/ Convert the two words into two keys for the phone size dictionary.\n    let keys = positions[position].toLowerCase().split(\" \");\n    crop.y = phone[keys[0]];\n    crop.x = phone[keys[1]];\n  } else if (widgetSize == \"中号\") {\n    crop.w = phone.中号;\n    crop.h = phone.小号;\n\n    \/\/ Medium and large widgets have a fixed x-value.\n    crop.x = phone.左边;\n    let positions = [\"顶部\", \"中间\", \"底部\"];\n    let position = await generateAlert(message, positions);\n    let key = positions[position].toLowerCase();\n    crop.y = phone[key];\n  } else if (widgetSize == \"大号\") {\n    crop.w = phone.中号;\n    crop.h = phone.大号;\n    crop.x = phone.左边;\n    let positions = [\"顶部\", \"底部\"];\n    let position = await generateAlert(message, positions);\n\n    \/\/ Large widgets at the bottom have the \"middle\" y-value.\n    crop.y = position ? phone.中间 : phone.顶部;\n  }\n\n  \/\/ Crop image and finalize the widget.\n  let imgCrop = cropImage(img, new Rect(crop.x, crop.y, crop.w, crop.h));\n\n  message = \"您的小部件背景已准备就绪。您想在Scriptable的小部件中使用它还是导出图像？\";\n  const exportPhotoOptions = [\"在小部件中使用\", \"导出到相册\"];\n  const exportPhoto = await generateAlert(message, exportPhotoOptions);\n\n  if (exportPhoto) {\n    Photos.save(imgCrop);\n  } else {\n    files.writeImage(path, imgCrop);\n  }\n\n  Script.complete();\n}\n\n\/\/ Generate an alert with the provided array of options.\nasync function generateAlert(message, options) {\n  let alert = new Alert();\n  alert.message = message;\n\n  for (const option of options) {\n    alert.addAction(option);\n  }\n\n  let response = await alert.presentAlert();\n  return response;\n}\n\n\/\/ Crop an image into the specified rect.\nfunction cropImage(img, rect) {\n  let draw = new DrawContext();\n  draw.size = new Size(rect.width, rect.height);\n\n  draw.drawImageAtPoint(img, new Point(-rect.x, -rect.y));\n  return draw.getImage();\n}\n\n\/\/ Pixel sizes and positions for widgets on all supported phones.\nfunction phoneSizes() {\n  let phones = {\n    \/\/ 11 Pro Max,Xs Max\n    2688: {\n      小号: 507,\n      中号: 1080,\n      大号: 1137,\n      左边: 81,\n      右边: 654,\n      顶部: 228,\n      中间: 858,\n      底部: 1488,\n    },\n    \/\/ 11,XR\n    1792: {\n      小号: 338,\n      中号: 720,\n      大号: 758,\n      左边: 54,\n      右边: 436,\n      顶部: 160,\n      中间: 580,\n      底部: 1000,\n    },\n    \/\/ 11 Pro,Xs,X\n    2436: {\n      小号: 465,\n      中号: 987,\n      大号: 1035,\n      左边: 69,\n      右边: 591,\n      顶部: 213,\n      中间: 783,\n      底部: 1353,\n    },\n    \/\/ Plus Phones\n    2208: {\n      小号: 471,\n      中号: 1044,\n      大号: 1071,\n      左边: 99,\n      右边: 672,\n      顶部: 114,\n      中间: 696,\n      底部: 1278,\n    },\n    \/\/SE2 and 6\/6s\/7\/8\n    1334: {\n      小号: 296,\n      中号: 642,\n      大号: 648,\n      左边: 54,\n      右边: 400,\n      顶部: 60,\n      中间: 412,\n      底部: 764,\n    },\n    \/\/SE1\n    1136: {\n      小号: 282,\n      中号: 584,\n      大号: 622,\n      左边: 30,\n      右边: 332,\n      顶部: 59,\n      中间: 399,\n      底部: 399,\n    },\n    \/\/ 12 and 12 Pro\n    2532: {\n      小号: 474,\n      中号: 1014,\n      大号: 1062,\n      左边: 78,\n      右边: 618,\n      顶部: 231,\n      中间: 819,\n      底部: 1407,\n    },\n    \/\/ 12 Mini\n    2340: {\n      小号: 436,\n      中号: 936,\n      大号: 980,\n      左边: 72,\n      右边: 570,\n      顶部: 212,\n      中间: 756,\n      底部: 1300,\n    },\n    \/\/ 12 Pro max\n    2778: {\n      小号: 518,\n      中号: 1114,\n      大号: 1162,\n      左边: 86,\n      右边: 678,\n      顶部: 252,\n      中间: 898,\n      底部: 1544,\n    },\n    \/\/ 11 and XR in Display Zoom mode\n    1624: {\n      小号: 310,\n      中号: 658,\n      大号: 690,\n      左边: 46,\n      右边: 394,\n      顶部: 142,\n      中间: 522,\n      底部: 902,\n    },\n    \/\/Plus in Display Zoom mode\n    2001: {\n      小号: 444,\n      中号: 963,\n      大号: 972,\n      左边: 81,\n      右边: 600,\n      顶部: 90,\n      中间: 618,\n      底部: 1146,\n    },\n    \/\/ iPad Air 4\n    2360: {\n      小号: 310,\n      中号: 658,\n      大号: 658,\n      左边: 132,\n      右边: 480,\n      顶部: 160,\n      中间: 508,\n      底部: 856,\n    },\n\n\n\n  };\n  return phones;\n}\n",
  "share_sheet_inputs" : [

  ]
}